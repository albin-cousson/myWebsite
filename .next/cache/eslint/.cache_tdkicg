[{"/Users/albincousson/Desktop/workflow/dev/myWebsite/pages/_app.tsx":"1","/Users/albincousson/Desktop/workflow/dev/myWebsite/pages/_document.tsx":"2","/Users/albincousson/Desktop/workflow/dev/myWebsite/pages/api/hello.ts":"3","/Users/albincousson/Desktop/workflow/dev/myWebsite/pages/components/downloadCvButton.tsx":"4","/Users/albincousson/Desktop/workflow/dev/myWebsite/pages/components/experience.tsx":"5","/Users/albincousson/Desktop/workflow/dev/myWebsite/pages/components/footer.tsx":"6","/Users/albincousson/Desktop/workflow/dev/myWebsite/pages/components/intro.tsx":"7","/Users/albincousson/Desktop/workflow/dev/myWebsite/pages/components/menu/menu.tsx":"8","/Users/albincousson/Desktop/workflow/dev/myWebsite/pages/components/menu/menuItem.tsx":"9","/Users/albincousson/Desktop/workflow/dev/myWebsite/pages/components/menu/menuToggle.tsx":"10","/Users/albincousson/Desktop/workflow/dev/myWebsite/pages/components/menu/navigation.tsx":"11","/Users/albincousson/Desktop/workflow/dev/myWebsite/pages/components/parallaxImage.tsx":"12","/Users/albincousson/Desktop/workflow/dev/myWebsite/pages/components/skills.tsx":"13","/Users/albincousson/Desktop/workflow/dev/myWebsite/pages/components/welcome.tsx":"14","/Users/albincousson/Desktop/workflow/dev/myWebsite/pages/index.tsx":"15"},{"size":1226,"mtime":1684961241403,"results":"16","hashOfConfig":"17"},{"size":231,"mtime":1681667553509,"results":"18","hashOfConfig":"17"},{"size":307,"mtime":1681667553509,"results":"19","hashOfConfig":"17"},{"size":732,"mtime":1684962982961,"results":"20","hashOfConfig":"17"},{"size":3014,"mtime":1684787942443,"results":"21","hashOfConfig":"17"},{"size":1025,"mtime":1684682867849,"results":"22","hashOfConfig":"17"},{"size":1089,"mtime":1684787897443,"results":"23","hashOfConfig":"17"},{"size":1776,"mtime":1682175275308,"results":"24","hashOfConfig":"17"},{"size":890,"mtime":1682173649776,"results":"25","hashOfConfig":"17"},{"size":1781,"mtime":1684685050759,"results":"26","hashOfConfig":"17"},{"size":1183,"mtime":1682174519537,"results":"27","hashOfConfig":"17"},{"size":709,"mtime":1684873983862,"results":"28","hashOfConfig":"17"},{"size":7168,"mtime":1684788016944,"results":"29","hashOfConfig":"17"},{"size":2401,"mtime":1685713235419,"results":"30","hashOfConfig":"17"},{"size":1601,"mtime":1684960586549,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1k8vdcw",{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/albincousson/Desktop/workflow/dev/myWebsite/pages/_app.tsx",[],[],"/Users/albincousson/Desktop/workflow/dev/myWebsite/pages/_document.tsx",[],[],"/Users/albincousson/Desktop/workflow/dev/myWebsite/pages/api/hello.ts",[],[],"/Users/albincousson/Desktop/workflow/dev/myWebsite/pages/components/downloadCvButton.tsx",["81"],[],"import React from 'react';\nimport { motion, useScroll, useSpring } from \"framer-motion\";\n\nimport styles from '@/styles/downloadCvButton.module.scss'\n\nexport default function DownloadCvButton() {\n  const { scrollYProgress } = useScroll();\n\n  const scaleY = useSpring(scrollYProgress, {\n    stiffness: 100,\n    damping: 30,\n    restDelta: 0.001\n  });\n\n  return (\n    <>\n       <motion.a className={styles.downloadCvButton} href={\"/cv/cv_albin_cousson.pdf\"} download\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n      >\n        <p>DL: CV</p>\n        <img src=\"/images/menuIcons/downloadBlack.png\" alt=\"\"/>\n      </motion.a>\n      {/* <motion.span className={styles.test} style={{ scaleY }}/> */}\n    </>\n  );\n};\n\n\n","/Users/albincousson/Desktop/workflow/dev/myWebsite/pages/components/experience.tsx",[],[],"/Users/albincousson/Desktop/workflow/dev/myWebsite/pages/components/footer.tsx",[],[],"/Users/albincousson/Desktop/workflow/dev/myWebsite/pages/components/intro.tsx",[],[],"/Users/albincousson/Desktop/workflow/dev/myWebsite/pages/components/menu/menu.tsx",["82"],[],"import * as React from \"react\";\nimport { useRef, useEffect } from \"react\";\nimport { motion, sync, useCycle } from \"framer-motion\";\nimport MenuToggle from \"./menuToggle\";\nimport Navigation from \"./navigation\";\n\nimport styles from \"@/styles/menu.module.scss\";\n\nconst nav = {\n  open: () => ({\n    display: \"block\",\n  }),\n  closed: {\n    display: \"none\",\n    transition: {\n      delay: 1\n    }\n  }\n};\n\nconst sidebar = {\n  open: (height = 1000) => ({\n    clipPath: `circle(${height * 2 + 200}px at 50px 50px)`,\n    transition: {\n      type: \"spring\",\n      stiffness: 20,\n      restDelta: 2\n    }\n  }),\n  closed: {\n    clipPath: \"circle(0px at 50px 50px)\",\n    transition: {\n      delay: 0.5,\n      type: \"spring\",\n      stiffness: 400,\n      damping: 40\n    }\n  }\n};\n\nexport default function Menu({handleMenuClick}: {handleMenuClick: any}) {\n  const [isOpen, toggleOpen] = useCycle(false, true);\n  const containerRef = useRef<HTMLElement | null>(null);\n  const dimensions = useRef({ width: 0, height: 0 });\n\n  useEffect(() => {\n    if (containerRef.current) {\n      dimensions.current.width = containerRef.current.offsetWidth;\n      dimensions.current.height = containerRef.current.offsetHeight;\n    }\n  }, [containerRef.current]);;\n\n  return (\n    <>\n      <MenuToggle\n        toggle={() => toggleOpen()}\n        isOpen={isOpen}\n      />\n      <motion.nav\n        className={styles.nav}\n        initial={false}\n        animate={isOpen ? \"open\" : \"closed\"}\n        variants={nav}\n        custom={dimensions.current.height}\n        ref={containerRef}\n      >\n        <motion.div className={styles.background} variants={sidebar} />\n        <div onClick={() => toggleOpen()}>\n          <Navigation handleMenuClick={handleMenuClick}/>\n        </div>\n      </motion.nav>\n    </>\n  );\n}","/Users/albincousson/Desktop/workflow/dev/myWebsite/pages/components/menu/menuItem.tsx",["83"],[],"import * as React from \"react\";\nimport { motion } from \"framer-motion\";\n\nimport styles from \"@/styles/menu.module.scss\";\n\nconst variants = {\n  open: {\n    y: 0,\n    opacity: 1,\n    transition: {\n      y: { stiffness: 1000, velocity: -100 }\n    }\n  },\n  closed: {\n    y: 50,\n    opacity: 0,\n    transition: {\n      y: { stiffness: 1000 }\n    }\n  }\n};\n\ntype MenuItemProps = {\n  handleMenuClick: (label: any) => void;\n  label: any;\n  icon: any;\n};\n\nexport default function MenuItem({ handleMenuClick, label, icon }: MenuItemProps) {\n  return (\n    <motion.li\n      className={styles.item}\n      onClick={()=>handleMenuClick(label)}\n      variants={variants}\n      whileHover={{ scale: 1.1 }}\n      whileTap={{ scale: 0.95 }}\n    >\n      <div className={styles.iconPlaceholder}><img src={icon} alt=\"\"/></div>\n      <div className={styles.textPlaceholder}>{label}</div>\n    </motion.li>\n  );\n};\n","/Users/albincousson/Desktop/workflow/dev/myWebsite/pages/components/menu/menuToggle.tsx",[],[],"/Users/albincousson/Desktop/workflow/dev/myWebsite/pages/components/menu/navigation.tsx",[],[],"/Users/albincousson/Desktop/workflow/dev/myWebsite/pages/components/parallaxImage.tsx",[],[],"/Users/albincousson/Desktop/workflow/dev/myWebsite/pages/components/skills.tsx",["84"],[],"import React, { useEffect, useRef, useState } from 'react';\nimport styles from '@/styles/skills.module.scss'\n\nimport { useInView } from \"framer-motion\"\nimport Matter from 'matter-js';\n\nexport default function Skills({ refForNavigate }: { refForNavigate: any }) {\n  const canvasRef = useRef<any>();\n\n  const [clientWidth, setClientWidth] = useState(0)\n  const [clientHeight, setClientHeight] = useState(0)\n\n  const boxIsInView = useInView(canvasRef, { once: true, amount: 1 })\n\n  let Engine = Matter.Engine,\n    Render = Matter.Render,\n    Runner = Matter.Runner,\n    MouseConstraint = Matter.MouseConstraint,\n    Mouse = Matter.Mouse,\n    Composite = Matter.Composite,\n    Bodies = Matter.Bodies;\n\n  let engine = Engine.create({\n    enableSleeping: true\n  }),\n    world = engine.world;\n\n  useEffect(() => {        \n    setClientWidth(document.documentElement.clientWidth - 30);\n    setClientHeight(document.documentElement.clientHeight - 60);\n    const handleResize = () => {\n      setClientWidth(document.documentElement.clientWidth - 30);\n      setClientHeight(document.documentElement.clientHeight - 60);\n    };\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, [])\n\n  useEffect(() => {\n    let render = Render.create({\n      engine: engine,\n      element: refForNavigate.current,\n      canvas: canvasRef.current,\n      options: {\n        width: clientWidth,\n        height: clientHeight,\n        background: 'rgba(0,0,0,0.6)',\n        wireframes: false,\n      }\n    });\n\n    Render.run(render);\n\n    // create runner\n    var runner = Runner.create();\n    Runner.run(runner, engine);\n\n    var offset = 25.5,\n      options = {\n        isStatic: true,\n        render: { fillStyle: '#000' }\n      };\n\n    world.bodies = [];\n\n    // these static walls will not be rendered in this sprites example, see options\n    let bodies = [\n      Bodies.rectangle(clientWidth + offset, clientHeight / 2, 50.5, clientHeight, options),\n      Bodies.rectangle(-offset, clientHeight / 2, 50.5, clientHeight, options),\n      Bodies.rectangle(clientWidth / 2, -offset, clientWidth, 50.5, options),\n      Bodies.rectangle(clientWidth / 2, clientHeight + offset, clientWidth, 50.5, options),\n    ]\n\n    if (boxIsInView) {\n      bodies.push(\n        Bodies.circle(clientWidth / 2 - 60, 120, 58, {\n          frictionAir: 0.02,\n          restitution: 0.6,\n          render: {\n            sprite: {\n              texture: \"/skills/node.png\",\n              xScale: 1,\n              yScale: 1\n            }\n          }\n        }),\n        Bodies.circle(clientWidth / 2, 120, 60, {\n          frictionAir: 0.02,\n          restitution: 0.6,\n          render: {\n            sprite: {\n              texture: \"/skills/angular.png\",\n              xScale: 1,\n              yScale: 1\n            }\n          }\n        }),\n        Bodies.circle(clientWidth / 2 + 60, 120, 52, {\n          frictionAir: 0.02,\n          restitution: 0.6,\n          render: {\n            sprite: {\n              texture: \"/skills/react.png\",\n              xScale: 1,\n              yScale: 1\n            }\n          }\n        })\n      );\n    }\n\n    Composite.add(world, bodies)\n\n    // add mouse control\n    var mouse = Mouse.create(render.canvas),\n      mouseConstraint = MouseConstraint.create(engine, {\n        mouse: mouse,\n        constraint: {\n          stiffness: 0.2,\n          render: {\n            visible: true,\n            strokeStyle: '#de1162',\n            lineWidth: 2\n          }\n        }\n      });\n\n    Composite.add(world, mouseConstraint);\n\n    // keep the mouse in sync with rendering\n    render.mouse = mouse;\n\n    (mouseConstraint.mouse as { [key: string]: any }).element.removeEventListener(\"mousewheel\", (mouseConstraint.mouse as { [key: string]: any }).mousewheel);\n    (mouseConstraint.mouse as { [key: string]: any }).element.removeEventListener(\"DOMMouseScroll\", (mouseConstraint.mouse as { [key: string]: any }).mousewheel);\n\n    const isMobile = window.matchMedia('(max-width: 767px)').matches;\n\n    if (isMobile) {\n      (mouseConstraint.mouse as { [key: string]: any }).element.removeEventListener(\"touchstart\", (mouseConstraint.mouse as { [key: string]: any }).mousedown);\n      (mouseConstraint.mouse as { [key: string]: any }).element.removeEventListener(\"touchmove\", (mouseConstraint.mouse as { [key: string]: any }).mousemove);;\n      (mouseConstraint.mouse as { [key: string]: any }).element.removeEventListener(\"touchend\", (mouseConstraint.mouse as { [key: string]: any }).mouseup);\n\n      document.addEventListener(\"touchstart\", function (event) {\n        const canvas = canvasRef.current;\n\n        const canvasWidth = canvas.width; // largeur de votre canevas ou scène\n        const canvasHeight = canvas.height;\n\n        // Obtenez les coordonnées du premier point de contact tactile (touches[0])\n        const touch = event.touches[0];\n        const touchX = touch.pageX;\n        const touchY = touch.pageY;\n\n        // Convertissez les coordonnées en utilisant la dimension et la position de votre canevas ou scène\n        // Obtenez les décalages du canevas par rapport à la fenêtre\n        const canvasRect = canvas.getBoundingClientRect();\n        const canvasOffsetX = canvasRect.left + window.pageXOffset;\n        const canvasOffsetY = canvasRect.top + window.pageYOffset;\n\n        // Ajustez les coordonnées en utilisant la dimension et la position réelles du canvas\n        const convertedX = Math.ceil((touchX - canvasOffsetX) * (canvasWidth / canvasRect.width))\n        const convertedY = Math.ceil((touchY - canvasOffsetY) * (canvasHeight / canvasRect.height))\n\n        // Utilisez les coordonnées converties du point de contact tactile de manière similaire à l'événement de la souris\n        const clickedBodies = Matter.Query.point(bodies, { x: convertedX, y: convertedY });\n\n        if (clickedBodies.length > 0) {\n          (mouseConstraint.mouse as { [key: string]: any }).element.addEventListener(\"touchstart\", (mouseConstraint.mouse as { [key: string]: any }).mousedown);\n          (mouseConstraint.mouse as { [key: string]: any }).element.addEventListener(\"touchmove\", (mouseConstraint.mouse as { [key: string]: any }).mousemove);;\n          (mouseConstraint.mouse as { [key: string]: any }).element.addEventListener(\"touchend\", (mouseConstraint.mouse as { [key: string]: any }).mouseup);\n        }\n      })\n\n      document.addEventListener(\"touchend\", function (event) {\n        (mouseConstraint.mouse as { [key: string]: any }).element.removeEventListener(\"touchstart\", (mouseConstraint.mouse as { [key: string]: any }).mousedown);\n        (mouseConstraint.mouse as { [key: string]: any }).element.removeEventListener(\"touchmove\", (mouseConstraint.mouse as { [key: string]: any }).mousemove);;\n        (mouseConstraint.mouse as { [key: string]: any }).element.removeEventListener(\"touchend\", (mouseConstraint.mouse as { [key: string]: any }).mouseup);\n      })\n    }\n\n  }, [clientWidth, clientHeight, boxIsInView])\n\n  return (\n    <div className={styles.skillsContainer}>\n      <div ref={refForNavigate}>\n        <canvas ref={canvasRef} />\n      </div>\n    </div>\n  );\n};","/Users/albincousson/Desktop/workflow/dev/myWebsite/pages/components/welcome.tsx",[],[],"/Users/albincousson/Desktop/workflow/dev/myWebsite/pages/index.tsx",[],[],{"ruleId":"85","severity":1,"message":"86","line":22,"column":9,"nodeType":"87","endLine":22,"endColumn":64},{"ruleId":"88","severity":1,"message":"89","line":51,"column":6,"nodeType":"90","endLine":51,"endColumn":28,"suggestions":"91"},{"ruleId":"85","severity":1,"message":"86","line":38,"column":47,"nodeType":"87","endLine":38,"endColumn":71},{"ruleId":"88","severity":1,"message":"92","line":181,"column":6,"nodeType":"90","endLine":181,"endColumn":46,"suggestions":"93"},"@next/next/no-img-element","Using `<img>` could result in slower LCP and higher bandwidth. Use `<Image />` from `next/image` instead to utilize Image Optimization. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'containerRef.current'. Either exclude it or remove the dependency array. Mutable values like 'containerRef.current' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["94"],"React Hook useEffect has missing dependencies: 'Bodies', 'Composite', 'Mouse', 'MouseConstraint', 'Render', 'Runner', 'engine', 'refForNavigate', and 'world'. Either include them or remove the dependency array.",["95"],{"desc":"96","fix":"97"},{"desc":"98","fix":"99"},"Update the dependencies array to be: []",{"range":"100","text":"101"},"Update the dependencies array to be: [clientWidth, clientHeight, boxIsInView, Render, engine, refForNavigate, Runner, world, Bodies, Composite, Mouse, MouseConstraint]",{"range":"102","text":"103"},[1203,1225],"[]",[6956,6996],"[clientWidth, clientHeight, boxIsInView, Render, engine, refForNavigate, Runner, world, Bodies, Composite, Mouse, MouseConstraint]"]