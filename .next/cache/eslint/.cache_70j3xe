[{"C:\\Users\\acousson\\Desktop\\workflow\\project\\myWebsite\\pages\\api\\hello.ts":"1","C:\\Users\\acousson\\Desktop\\workflow\\project\\myWebsite\\pages\\components\\downloadCvButton.tsx":"2","C:\\Users\\acousson\\Desktop\\workflow\\project\\myWebsite\\pages\\components\\experience.tsx":"3","C:\\Users\\acousson\\Desktop\\workflow\\project\\myWebsite\\pages\\components\\footer.tsx":"4","C:\\Users\\acousson\\Desktop\\workflow\\project\\myWebsite\\pages\\components\\intro.tsx":"5","C:\\Users\\acousson\\Desktop\\workflow\\project\\myWebsite\\pages\\components\\menu\\menu.tsx":"6","C:\\Users\\acousson\\Desktop\\workflow\\project\\myWebsite\\pages\\components\\menu\\menuItem.tsx":"7","C:\\Users\\acousson\\Desktop\\workflow\\project\\myWebsite\\pages\\components\\menu\\menuToggle.tsx":"8","C:\\Users\\acousson\\Desktop\\workflow\\project\\myWebsite\\pages\\components\\menu\\navigation.tsx":"9","C:\\Users\\acousson\\Desktop\\workflow\\project\\myWebsite\\pages\\components\\parallaxImage.tsx":"10","C:\\Users\\acousson\\Desktop\\workflow\\project\\myWebsite\\pages\\components\\skills.tsx":"11","C:\\Users\\acousson\\Desktop\\workflow\\project\\myWebsite\\pages\\components\\welcome.tsx":"12","C:\\Users\\acousson\\Desktop\\workflow\\project\\myWebsite\\pages\\index.tsx":"13","C:\\Users\\acousson\\Desktop\\workflow\\project\\myWebsite\\pages\\_app.tsx":"14","C:\\Users\\acousson\\Desktop\\workflow\\project\\myWebsite\\pages\\_document.tsx":"15"},{"size":320,"mtime":1690207038340,"results":"16","hashOfConfig":"17"},{"size":1071,"mtime":1690534690372,"results":"18","hashOfConfig":"17"},{"size":4460,"mtime":1690535957512,"results":"19","hashOfConfig":"17"},{"size":1057,"mtime":1690376126270,"results":"20","hashOfConfig":"17"},{"size":1144,"mtime":1690371357396,"results":"21","hashOfConfig":"17"},{"size":1849,"mtime":1690382774628,"results":"22","hashOfConfig":"17"},{"size":934,"mtime":1690451216125,"results":"23","hashOfConfig":"17"},{"size":1736,"mtime":1690559553883,"results":"24","hashOfConfig":"17"},{"size":1160,"mtime":1690470722161,"results":"25","hashOfConfig":"17"},{"size":1199,"mtime":1690531264754,"results":"26","hashOfConfig":"17"},{"size":8911,"mtime":1690558163318,"results":"27","hashOfConfig":"17"},{"size":2410,"mtime":1690377744071,"results":"28","hashOfConfig":"17"},{"size":3168,"mtime":1690977612619,"results":"29","hashOfConfig":"17"},{"size":1256,"mtime":1690478523981,"results":"30","hashOfConfig":"17"},{"size":244,"mtime":1690207038340,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lfjjje",{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\acousson\\Desktop\\workflow\\project\\myWebsite\\pages\\api\\hello.ts",[],[],"C:\\Users\\acousson\\Desktop\\workflow\\project\\myWebsite\\pages\\components\\downloadCvButton.tsx",["81"],[],"import React, { useState } from 'react';\r\nimport { motion, useScroll } from \"framer-motion\";\r\n\r\nimport styles from '@/styles/downloadCvButton.module.scss'\r\n\r\nexport default function DownloadCvButton() {\r\n  // const [buttonIsHover, setButtonIsHover] = useState(false);\r\n\r\n  const { scrollYProgress } = useScroll();\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.wrapperDownloadCvButton}>\r\n        <motion.a className={styles.downloadCvButton} href={\"/cv/cv_albin_cousson.pdf\"} download\r\n          // onMouseEnter={() => { setButtonIsHover(true) }}\r\n          // onMouseLeave={() => { setButtonIsHover(false) }}\r\n          initial={{ opacity: 0 }}\r\n          animate={{ opacity: 1 }}\r\n        >\r\n          <p>DL: CV</p>\r\n          {/* {buttonIsHover ? <img src=\"/icons/inbox-in.png\" alt=\"\" /> : <img src=\"/icons/inbox-inb.png\" alt=\"\" />} */}\r\n          <img src=\"/icons/inbox-inb.png\" alt=\"\" />\r\n          <motion.div\r\n            style={{\r\n              scaleY: scrollYProgress\r\n            }}\r\n          />\r\n        </motion.a>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\n","C:\\Users\\acousson\\Desktop\\workflow\\project\\myWebsite\\pages\\components\\experience.tsx",[],[],"C:\\Users\\acousson\\Desktop\\workflow\\project\\myWebsite\\pages\\components\\footer.tsx",[],[],"C:\\Users\\acousson\\Desktop\\workflow\\project\\myWebsite\\pages\\components\\intro.tsx",[],[],"C:\\Users\\acousson\\Desktop\\workflow\\project\\myWebsite\\pages\\components\\menu\\menu.tsx",["82"],[],"import * as React from \"react\";\r\nimport { useRef, useEffect } from \"react\";\r\nimport { motion, sync, useCycle } from \"framer-motion\";\r\nimport MenuToggle from \"./menuToggle\";\r\nimport Navigation from \"./navigation\";\r\n\r\nimport styles from \"@/styles/menu.module.scss\";\r\n\r\nconst nav = {\r\n  open: () => ({\r\n    display: \"block\",\r\n  }),\r\n  closed: {\r\n    display: \"none\",\r\n    transition: {\r\n      delay: 2\r\n    }\r\n  }\r\n};\r\n\r\nconst sidebar = {\r\n  open: (height = 1000) => ({\r\n    clipPath: `circle(${height * 2 + 200}px at 50px 50px)`,\r\n    transition: {\r\n      type: \"spring\",\r\n      stiffness: 20,\r\n      restDelta: 2\r\n    }\r\n  }),\r\n  closed: {\r\n    clipPath: \"circle(0px at 50px 50px)\",\r\n    transition: {\r\n      delay: 0.5,\r\n      type: \"spring\",\r\n      stiffness: 400,\r\n      damping: 40\r\n    }\r\n  }\r\n};\r\n\r\nexport default function Menu({handleMenuClick}: {handleMenuClick: any}) {\r\n  const [isOpen, toggleOpen] = useCycle(false, true);\r\n  const containerRef = useRef<HTMLElement | null>(null);\r\n  const dimensions = useRef({ width: 0, height: 0 });\r\n\r\n  useEffect(() => {\r\n    if (containerRef.current) {\r\n      dimensions.current.width = containerRef.current.offsetWidth;\r\n      dimensions.current.height = containerRef.current.offsetHeight;\r\n    }\r\n  }, [containerRef.current]);;\r\n\r\n  return (\r\n    <>\r\n      <MenuToggle\r\n        toggle={() => toggleOpen()}\r\n        isOpen={isOpen}\r\n      />\r\n      <motion.nav\r\n        className={styles.nav}\r\n        initial={false}\r\n        animate={isOpen ? \"open\" : \"closed\"}\r\n        variants={nav}\r\n        custom={dimensions.current.height}\r\n        ref={containerRef}\r\n      >\r\n        <motion.div className={styles.background} variants={sidebar} />\r\n        <div onClick={() => toggleOpen()}>\r\n          <Navigation handleMenuClick={handleMenuClick}/>\r\n        </div>\r\n      </motion.nav>\r\n    </>\r\n  );\r\n}","C:\\Users\\acousson\\Desktop\\workflow\\project\\myWebsite\\pages\\components\\menu\\menuItem.tsx",["83"],[],"import * as React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nimport styles from \"@/styles/menu.module.scss\";\r\n\r\nconst variants = {\r\n  open: {\r\n    y: 0,\r\n    opacity: 1,\r\n    transition: {\r\n      y: { stiffness: 1000, velocity: -100 }\r\n    }\r\n  },\r\n  closed: {\r\n    y: 50,\r\n    opacity: 0,\r\n    transition: {\r\n      y: { stiffness: 1000 }\r\n    }\r\n  }\r\n};\r\n\r\ntype MenuItemProps = {\r\n  handleMenuClick: (label: any) => void;\r\n  label: any;\r\n  icon: any;\r\n};\r\n\r\nexport default function MenuItem({ handleMenuClick, label, icon }: MenuItemProps) {\r\n  return (\r\n    <motion.li\r\n      className={styles.item}\r\n      onClick={()=>handleMenuClick(label)}\r\n      variants={variants}\r\n      whileHover={{ scale: 1.1 }}\r\n      whileTap={{ scale: 0.95 }}\r\n    >\r\n      <div className={styles.iconPlaceholder}>{<img src={icon} alt=\"\"/>}</div>\r\n      <div className={styles.textPlaceholder}>{label}</div>\r\n    </motion.li>\r\n  );\r\n};\r\n","C:\\Users\\acousson\\Desktop\\workflow\\project\\myWebsite\\pages\\components\\menu\\menuToggle.tsx",[],[],"C:\\Users\\acousson\\Desktop\\workflow\\project\\myWebsite\\pages\\components\\menu\\navigation.tsx",[],[],"C:\\Users\\acousson\\Desktop\\workflow\\project\\myWebsite\\pages\\components\\parallaxImage.tsx",[],[],"C:\\Users\\acousson\\Desktop\\workflow\\project\\myWebsite\\pages\\components\\skills.tsx",["84"],[],"import React, { useEffect, useRef, useState } from 'react';\r\nimport styles from '@/styles/skills.module.scss'\r\n\r\nimport { useInView } from \"framer-motion\"\r\nimport Matter from 'matter-js';\r\n\r\nexport default function Skills({ refForNavigate }: { refForNavigate: any }) {\r\n  const canvasRef = useRef<any>();\r\n\r\n  const [clientWidth, setClientWidth] = useState(0)\r\n  const [clientHeight, setClientHeight] = useState(0)\r\n\r\n  const boxIsInView = useInView(canvasRef, { once: true, amount: 1 })\r\n\r\n  let Engine = Matter.Engine,\r\n    Render = Matter.Render,\r\n    Runner = Matter.Runner,\r\n    MouseConstraint = Matter.MouseConstraint,\r\n    Mouse = Matter.Mouse,\r\n    Composite = Matter.Composite,\r\n    Bodies = Matter.Bodies;\r\n\r\n  let engine = Engine.create({\r\n    enableSleeping: false\r\n  }),\r\n    world = engine.world;\r\n\r\n  useEffect(() => {\r\n    setClientWidth(document.documentElement.clientWidth - 30);\r\n    setClientHeight(document.documentElement.clientHeight - 60);\r\n    const handleResize = () => {\r\n      setClientWidth(document.documentElement.clientWidth - 30);\r\n      setClientHeight(document.documentElement.clientHeight - 60);\r\n    };\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    let render = Render.create({\r\n      engine: engine,\r\n      element: refForNavigate.current,\r\n      canvas: canvasRef.current,\r\n      options: {\r\n        width: clientWidth,\r\n        height: clientHeight,\r\n        background: 'rgba(252, 255, 245,0.5)',\r\n        wireframes: false,\r\n      }\r\n    });\r\n\r\n    Render.run(render);\r\n\r\n    // create runner\r\n    var runner = Runner.create();\r\n    Runner.run(runner, engine);\r\n\r\n    var offset = 25.5,\r\n      options = {\r\n        isStatic: true,\r\n        render: { fillStyle: '#000' }\r\n      };\r\n\r\n    world.bodies = [];\r\n\r\n    // these static walls will not be rendered in this sprites example, see options\r\n    let bodies = [\r\n      Bodies.rectangle(clientWidth + offset, clientHeight / 2, 50.5, clientHeight, options),\r\n      Bodies.rectangle(-offset, clientHeight / 2, 50.5, clientHeight, options),\r\n      Bodies.rectangle(clientWidth / 2, clientHeight + offset, clientWidth, 50.5, options),\r\n    ]\r\n\r\n    if (boxIsInView) {\r\n      bodies.push(\r\n        Bodies.circle(clientWidth / 2 - 40, -100, 75, {\r\n          frictionAir: 0.02,\r\n          restitution: 0.6,\r\n          render: {\r\n            sprite: {\r\n              texture: \"/skills/react.png\",\r\n              xScale: 1,\r\n              yScale: 1\r\n            }\r\n          }\r\n        }),\r\n        Bodies.circle(clientWidth / 2 + 40, -100, 75, {\r\n          frictionAir: 0.02,\r\n          restitution: 0.6,\r\n          render: {\r\n            sprite: {\r\n              texture: \"/skills/angular.png\",\r\n              xScale: 1,\r\n              yScale: 1\r\n            }\r\n          }\r\n        }),\r\n        Bodies.circle(clientWidth / 2 - 40, -220, 75, {\r\n          frictionAir: 0.02,\r\n          restitution: 0.6,\r\n          render: {\r\n            sprite: {\r\n              texture: \"/skills/vue.png\",\r\n              xScale: 1,\r\n              yScale: 1\r\n            }\r\n          }\r\n        }),\r\n        Bodies.circle(clientWidth / 2 + 40, -220, 75, {\r\n          frictionAir: 0.02,\r\n          restitution: 0.6,\r\n          render: {\r\n            sprite: {\r\n              texture: \"/skills/express.png\",\r\n              xScale: 1,\r\n              yScale: 1\r\n            }\r\n          }\r\n        }),\r\n        Bodies.circle(clientWidth / 2 - 40, -340, 75, {\r\n          frictionAir: 0.02,\r\n          restitution: 0.6,\r\n          render: {\r\n            sprite: {\r\n              texture: \"/skills/nest.png\",\r\n              xScale: 1,\r\n              yScale: 1\r\n            }\r\n          }\r\n        }),\r\n        Bodies.circle(clientWidth / 2 + 40, -340, 75, {\r\n          frictionAir: 0.02,\r\n          restitution: 0.6,\r\n          render: {\r\n            sprite: {\r\n              texture: \"/skills/docker.png\",\r\n              xScale: 1,\r\n              yScale: 1\r\n            }\r\n          }\r\n        }),\r\n        Bodies.circle(clientWidth / 2 - 40, -460, 75, {\r\n          frictionAir: 0.02,\r\n          restitution: 0.6,\r\n          render: {\r\n            sprite: {\r\n              texture: \"/skills/git.png\",\r\n              xScale: 1,\r\n              yScale: 1\r\n            }\r\n          }\r\n        }),\r\n        Bodies.circle(clientWidth / 2 + 40, -460, 75, {\r\n          frictionAir: 0.02,\r\n          restitution: 0.6,\r\n          render: {\r\n            sprite: {\r\n              texture: \"/skills/jira.png\",\r\n              xScale: 1,\r\n              yScale: 1\r\n            }\r\n          }\r\n        })\r\n      )\r\n      setTimeout(()=>{\r\n        Composite.add(world, Bodies.rectangle(clientWidth / 2, -offset, clientWidth, 50.5, options))\r\n      }, 2000)\r\n    }\r\n\r\n    Composite.add(world, bodies)\r\n\r\n    // add mouse control\r\n    var mouse = Mouse.create(render.canvas),\r\n      mouseConstraint = MouseConstraint.create(engine, {\r\n        mouse: mouse,\r\n        constraint: {\r\n          stiffness: 0.2,\r\n          render: {\r\n            visible: true,\r\n            strokeStyle: '#00a149',\r\n            lineWidth: 2\r\n          }\r\n        }\r\n      });\r\n\r\n    Composite.add(world, mouseConstraint);\r\n\r\n    // keep the mouse in sync with rendering\r\n    render.mouse = mouse;\r\n\r\n    (mouseConstraint.mouse as { [key: string]: any }).element.removeEventListener(\"mousewheel\", (mouseConstraint.mouse as { [key: string]: any }).mousewheel);\r\n    (mouseConstraint.mouse as { [key: string]: any }).element.removeEventListener(\"DOMMouseScroll\", (mouseConstraint.mouse as { [key: string]: any }).mousewheel);\r\n\r\n    const isMobile = window.matchMedia('(max-width: 767px)').matches;\r\n\r\n    if (isMobile) {\r\n      (mouseConstraint.mouse as { [key: string]: any }).element.removeEventListener(\"touchstart\", (mouseConstraint.mouse as { [key: string]: any }).mousedown);\r\n      (mouseConstraint.mouse as { [key: string]: any }).element.removeEventListener(\"touchmove\", (mouseConstraint.mouse as { [key: string]: any }).mousemove);;\r\n      (mouseConstraint.mouse as { [key: string]: any }).element.removeEventListener(\"touchend\", (mouseConstraint.mouse as { [key: string]: any }).mouseup);\r\n\r\n      document.addEventListener(\"touchstart\", function (event) {\r\n        const canvas = canvasRef.current;\r\n\r\n        const canvasWidth = canvas.width; // largeur de votre canevas ou scène\r\n        const canvasHeight = canvas.height;\r\n\r\n        // Obtenez les coordonnées du premier point de contact tactile (touches[0])\r\n        const touch = event.touches[0];\r\n        const touchX = touch.pageX;\r\n        const touchY = touch.pageY;\r\n\r\n        // Convertissez les coordonnées en utilisant la dimension et la position de votre canevas ou scène\r\n        // Obtenez les décalages du canevas par rapport à la fenêtre\r\n        const canvasRect = canvas.getBoundingClientRect();\r\n        const canvasOffsetX = canvasRect.left + window.pageXOffset;\r\n        const canvasOffsetY = canvasRect.top + window.pageYOffset;\r\n\r\n        // Ajustez les coordonnées en utilisant la dimension et la position réelles du canvas\r\n        const convertedX = Math.ceil((touchX - canvasOffsetX) * (canvasWidth / canvasRect.width))\r\n        const convertedY = Math.ceil((touchY - canvasOffsetY) * (canvasHeight / canvasRect.height))\r\n\r\n        // Utilisez les coordonnées converties du point de contact tactile de manière similaire à l'événement de la souris\r\n        const clickedBodies = Matter.Query.point(bodies, { x: convertedX, y: convertedY });\r\n\r\n        if (clickedBodies.length > 0) {\r\n          (mouseConstraint.mouse as { [key: string]: any }).element.addEventListener(\"touchstart\", (mouseConstraint.mouse as { [key: string]: any }).mousedown);\r\n          (mouseConstraint.mouse as { [key: string]: any }).element.addEventListener(\"touchmove\", (mouseConstraint.mouse as { [key: string]: any }).mousemove);;\r\n          (mouseConstraint.mouse as { [key: string]: any }).element.addEventListener(\"touchend\", (mouseConstraint.mouse as { [key: string]: any }).mouseup);\r\n        }\r\n      })\r\n\r\n      document.addEventListener(\"touchend\", function (event) {\r\n        (mouseConstraint.mouse as { [key: string]: any }).element.removeEventListener(\"touchstart\", (mouseConstraint.mouse as { [key: string]: any }).mousedown);\r\n        (mouseConstraint.mouse as { [key: string]: any }).element.removeEventListener(\"touchmove\", (mouseConstraint.mouse as { [key: string]: any }).mousemove);;\r\n        (mouseConstraint.mouse as { [key: string]: any }).element.removeEventListener(\"touchend\", (mouseConstraint.mouse as { [key: string]: any }).mouseup);\r\n      })\r\n    }\r\n\r\n  }, [clientWidth, clientHeight, boxIsInView])\r\n\r\n  return (\r\n    <div className={styles.skillsContainer}>\r\n      <div ref={refForNavigate}>\r\n        <canvas ref={canvasRef} />\r\n      </div>\r\n    </div>\r\n  );\r\n};","C:\\Users\\acousson\\Desktop\\workflow\\project\\myWebsite\\pages\\components\\welcome.tsx",[],[],"C:\\Users\\acousson\\Desktop\\workflow\\project\\myWebsite\\pages\\index.tsx",[],[],"C:\\Users\\acousson\\Desktop\\workflow\\project\\myWebsite\\pages\\_app.tsx",[],[],"C:\\Users\\acousson\\Desktop\\workflow\\project\\myWebsite\\pages\\_document.tsx",[],[],{"ruleId":"85","severity":1,"message":"86","line":22,"column":11,"nodeType":"87","endLine":22,"endColumn":52},{"ruleId":"88","severity":1,"message":"89","line":51,"column":6,"nodeType":"90","endLine":51,"endColumn":28,"suggestions":"91"},{"ruleId":"85","severity":1,"message":"86","line":38,"column":48,"nodeType":"87","endLine":38,"endColumn":72},{"ruleId":"88","severity":1,"message":"92","line":238,"column":6,"nodeType":"90","endLine":238,"endColumn":46,"suggestions":"93"},"@next/next/no-img-element","Using `<img>` could result in slower LCP and higher bandwidth. Use `<Image />` from `next/image` instead to utilize Image Optimization. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'containerRef.current'. Either exclude it or remove the dependency array. Mutable values like 'containerRef.current' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["94"],"React Hook useEffect has missing dependencies: 'Bodies', 'Composite', 'Mouse', 'MouseConstraint', 'Render', 'Runner', 'engine', 'refForNavigate', and 'world'. Either include them or remove the dependency array.",["95"],{"desc":"96","fix":"97"},{"desc":"98","fix":"99"},"Update the dependencies array to be: []",{"range":"100","text":"101"},"Update the dependencies array to be: [clientWidth, clientHeight, boxIsInView, Render, engine, refForNavigate, Runner, world, Bodies, Composite, Mouse, MouseConstraint]",{"range":"102","text":"103"},[1253,1275],"[]",[8690,8730],"[clientWidth, clientHeight, boxIsInView, Render, engine, refForNavigate, Runner, world, Bodies, Composite, Mouse, MouseConstraint]"]